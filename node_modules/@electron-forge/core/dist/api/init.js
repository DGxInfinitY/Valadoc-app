"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

require("source-map-support/register");

var _asyncOra = require("@electron-forge/async-ora");

var _debug = _interopRequireDefault(require("debug"));

var _initCustom = _interopRequireDefault(require("./init-scripts/init-custom"));

var _initDirectory = _interopRequireDefault(require("./init-scripts/init-directory"));

var _initGit = _interopRequireDefault(require("./init-scripts/init-git"));

var _initNpm = _interopRequireDefault(require("./init-scripts/init-npm"));

var _initStarterFiles = _interopRequireDefault(require("./init-scripts/init-starter-files"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

const d = (0, _debug.default)('electron-forge:init');

var _default =
/*#__PURE__*/
function () {
  var _ref = _asyncToGenerator(function* ({
    dir = process.cwd(),
    interactive = false,
    copyCIFiles = false,
    template
  }) {
    _asyncOra.asyncOra.interactive = interactive;
    d(`Initializing in: ${dir}`);
    yield (0, _initDirectory.default)(dir);
    yield (0, _initGit.default)(dir);
    yield (0, _initStarterFiles.default)(dir, {
      copyCIFiles
    });
    yield (0, _initNpm.default)(dir);

    if (template) {
      yield (0, _initCustom.default)(dir, template);
    }
  });

  return function (_x) {
    return _ref.apply(this, arguments);
  };
}();

exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9hcGkvaW5pdC50cyJdLCJuYW1lcyI6WyJkIiwiZGlyIiwicHJvY2VzcyIsImN3ZCIsImludGVyYWN0aXZlIiwiY29weUNJRmlsZXMiLCJ0ZW1wbGF0ZSIsImFzeW5jT3JhIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFFQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFFQSxNQUFNQSxDQUFDLEdBQUcsb0JBQU0scUJBQU4sQ0FBVjs7Ozs7K0JBcUJlLFdBQU87QUFDcEJDLElBQUFBLEdBQUcsR0FBR0MsT0FBTyxDQUFDQyxHQUFSLEVBRGM7QUFFcEJDLElBQUFBLFdBQVcsR0FBRyxLQUZNO0FBR3BCQyxJQUFBQSxXQUFXLEdBQUcsS0FITTtBQUlwQkMsSUFBQUE7QUFKb0IsR0FBUCxFQUtJO0FBQ2pCQyx1QkFBU0gsV0FBVCxHQUF1QkEsV0FBdkI7QUFFQUosSUFBQUEsQ0FBQyxDQUFFLG9CQUFtQkMsR0FBSSxFQUF6QixDQUFEO0FBRUEsVUFBTSw0QkFBY0EsR0FBZCxDQUFOO0FBQ0EsVUFBTSxzQkFBUUEsR0FBUixDQUFOO0FBQ0EsVUFBTSwrQkFBWUEsR0FBWixFQUFpQjtBQUFFSSxNQUFBQTtBQUFGLEtBQWpCLENBQU47QUFDQSxVQUFNLHNCQUFRSixHQUFSLENBQU47O0FBQ0EsUUFBSUssUUFBSixFQUFjO0FBQ1osWUFBTSx5QkFBV0wsR0FBWCxFQUFnQkssUUFBaEIsQ0FBTjtBQUNEO0FBQ0YsRyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFzeW5jT3JhIH0gZnJvbSAnQGVsZWN0cm9uLWZvcmdlL2FzeW5jLW9yYSc7XG5pbXBvcnQgZGVidWcgZnJvbSAnZGVidWcnO1xuXG5pbXBvcnQgaW5pdEN1c3RvbSBmcm9tICcuL2luaXQtc2NyaXB0cy9pbml0LWN1c3RvbSc7XG5pbXBvcnQgaW5pdERpcmVjdG9yeSBmcm9tICcuL2luaXQtc2NyaXB0cy9pbml0LWRpcmVjdG9yeSc7XG5pbXBvcnQgaW5pdEdpdCBmcm9tICcuL2luaXQtc2NyaXB0cy9pbml0LWdpdCc7XG5pbXBvcnQgaW5pdE5QTSBmcm9tICcuL2luaXQtc2NyaXB0cy9pbml0LW5wbSc7XG5pbXBvcnQgaW5pdFN0YXJ0ZXIgZnJvbSAnLi9pbml0LXNjcmlwdHMvaW5pdC1zdGFydGVyLWZpbGVzJztcblxuY29uc3QgZCA9IGRlYnVnKCdlbGVjdHJvbi1mb3JnZTppbml0Jyk7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSW5pdE9wdGlvbnMge1xuICAvKipcbiAgICogVGhlIHBhdGggdG8gdGhlIGFwcCB0byBiZSBpbml0aWFsaXplZFxuICAgKi9cbiAgZGlyPzogc3RyaW5nO1xuICAvKipcbiAgICogV2hldGhlciB0byB1c2Ugc2Vuc2libGUgZGVmYXVsdHMgb3IgcHJvbXB0IHRoZSB1c2VyIHZpc3VhbGx5XG4gICAqL1xuICBpbnRlcmFjdGl2ZT86IGJvb2xlYW47XG4gIC8qKlxuICAgKiBXaGV0aGVyIHRvIGNvcHkgVHJhdmlzIGFuZCBBcHBWZXlvciBDSSBmaWxlc1xuICAgKi9cbiAgY29weUNJRmlsZXM/OiBib29sZWFuO1xuICAvKipcbiAgICogVGhlIGN1c3RvbSB0ZW1wbGF0ZSB0byB1c2UuIElmIGxlZnQgZW1wdHksIHRoZSBkZWZhdWx0IHRlbXBsYXRlIGlzIHVzZWRcbiAgICovXG4gIHRlbXBsYXRlPzogc3RyaW5nO1xufVxuXG5leHBvcnQgZGVmYXVsdCBhc3luYyAoe1xuICBkaXIgPSBwcm9jZXNzLmN3ZCgpLFxuICBpbnRlcmFjdGl2ZSA9IGZhbHNlLFxuICBjb3B5Q0lGaWxlcyA9IGZhbHNlLFxuICB0ZW1wbGF0ZSxcbn06IEluaXRPcHRpb25zKSA9PiB7XG4gIGFzeW5jT3JhLmludGVyYWN0aXZlID0gaW50ZXJhY3RpdmU7XG5cbiAgZChgSW5pdGlhbGl6aW5nIGluOiAke2Rpcn1gKTtcblxuICBhd2FpdCBpbml0RGlyZWN0b3J5KGRpcik7XG4gIGF3YWl0IGluaXRHaXQoZGlyKTtcbiAgYXdhaXQgaW5pdFN0YXJ0ZXIoZGlyLCB7IGNvcHlDSUZpbGVzIH0pO1xuICBhd2FpdCBpbml0TlBNKGRpcik7XG4gIGlmICh0ZW1wbGF0ZSkge1xuICAgIGF3YWl0IGluaXRDdXN0b20oZGlyLCB0ZW1wbGF0ZSk7XG4gIH1cbn07XG4iXX0=