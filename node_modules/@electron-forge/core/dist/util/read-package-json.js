"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.readMutatedPackageJson = exports.readRawPackageJson = void 0;

require("source-map-support/register");

var _fsExtra = _interopRequireDefault(require("fs-extra"));

var _path = _interopRequireDefault(require("path"));

var _hook = require("./hook");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

const readRawPackageJson =
/*#__PURE__*/
function () {
  var _ref = _asyncToGenerator(function* (dir) {
    return yield _fsExtra.default.readJson(_path.default.resolve(dir, 'package.json'));
  });

  return function readRawPackageJson(_x) {
    return _ref.apply(this, arguments);
  };
}();

exports.readRawPackageJson = readRawPackageJson;

const readMutatedPackageJson =
/*#__PURE__*/
function () {
  var _ref2 = _asyncToGenerator(function* (dir, forgeConfig) {
    return (0, _hook.runMutatingHook)(forgeConfig, 'readPackageJson', (yield readRawPackageJson(dir)));
  });

  return function readMutatedPackageJson(_x2, _x3) {
    return _ref2.apply(this, arguments);
  };
}();

exports.readMutatedPackageJson = readMutatedPackageJson;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL3JlYWQtcGFja2FnZS1qc29uLnRzIl0sIm5hbWVzIjpbInJlYWRSYXdQYWNrYWdlSnNvbiIsImRpciIsImZzIiwicmVhZEpzb24iLCJwYXRoIiwicmVzb2x2ZSIsInJlYWRNdXRhdGVkUGFja2FnZUpzb24iLCJmb3JnZUNvbmZpZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQ0E7O0FBQ0E7O0FBRUE7Ozs7Ozs7O0FBRU8sTUFBTUEsa0JBQWtCO0FBQUE7QUFBQTtBQUFBLCtCQUFJLFdBQU9DLEdBQVA7QUFBQSxpQkFDM0JDLGlCQUFHQyxRQUFILENBQVlDLGNBQUtDLE9BQUwsQ0FBYUosR0FBYixFQUFrQixjQUFsQixDQUFaLENBRDJCO0FBQUEsR0FBSjs7QUFBQSxrQkFBbEJELGtCQUFrQjtBQUFBO0FBQUE7QUFBQSxHQUF4Qjs7OztBQUdBLE1BQU1NLHNCQUFzQjtBQUFBO0FBQUE7QUFBQSxnQ0FBRyxXQUFPTCxHQUFQLEVBQW9CTSxXQUFwQjtBQUFBLFdBQ3BDLDJCQUFnQkEsV0FBaEIsRUFBNkIsaUJBQTdCLFNBQXNEUCxrQkFBa0IsQ0FBQ0MsR0FBRCxDQUF4RSxFQURvQztBQUFBLEdBQUg7O0FBQUEsa0JBQXRCSyxzQkFBc0I7QUFBQTtBQUFBO0FBQUEsR0FBNUIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBGb3JnZUNvbmZpZyB9IGZyb20gJ0BlbGVjdHJvbi1mb3JnZS9zaGFyZWQtdHlwZXMnO1xuaW1wb3J0IGZzIGZyb20gJ2ZzLWV4dHJhJztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuXG5pbXBvcnQgeyBydW5NdXRhdGluZ0hvb2sgfSBmcm9tICcuL2hvb2snO1xuXG5leHBvcnQgY29uc3QgcmVhZFJhd1BhY2thZ2VKc29uID0gIGFzeW5jIChkaXI6IHN0cmluZykgPT5cbiAgYXdhaXQgZnMucmVhZEpzb24ocGF0aC5yZXNvbHZlKGRpciwgJ3BhY2thZ2UuanNvbicpKTtcblxuZXhwb3J0IGNvbnN0IHJlYWRNdXRhdGVkUGFja2FnZUpzb24gPSBhc3luYyAoZGlyOiBzdHJpbmcsIGZvcmdlQ29uZmlnOiBGb3JnZUNvbmZpZykgPT5cbiAgcnVuTXV0YXRpbmdIb29rKGZvcmdlQ29uZmlnLCAncmVhZFBhY2thZ2VKc29uJywgYXdhaXQgcmVhZFJhd1BhY2thZ2VKc29uKGRpcikpO1xuIl19