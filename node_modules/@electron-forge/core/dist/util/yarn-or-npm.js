"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.hasYarn = exports.yarnOrNpmSpawn = exports.default = void 0;

require("source-map-support/register");

var _crossSpawnPromise = _interopRequireDefault(require("cross-spawn-promise"));

var _logSymbols = _interopRequireDefault(require("log-symbols"));

var _yarnOrNpm = _interopRequireDefault(require("yarn-or-npm"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const safeYarnOrNpm = () => {
  const system = (0, _yarnOrNpm.default)();

  switch (process.env.NODE_INSTALLER) {
    case 'yarn':
    case 'npm':
      return process.env.NODE_INSTALLER;

    default:
      if (process.env.NODE_INSTALLER) {
        console.warn(`${_logSymbols.default.warning} Unknown NODE_INSTALLER, using detected installer ${system}`.yellow);
      }

      return system;
  }
};

var _default = safeYarnOrNpm;
exports.default = _default;

const yarnOrNpmSpawn = (args, opts) => (0, _crossSpawnPromise.default)(safeYarnOrNpm(), args, opts);

exports.yarnOrNpmSpawn = yarnOrNpmSpawn;

const hasYarn = () => safeYarnOrNpm() === 'yarn';

exports.hasYarn = hasYarn;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL3lhcm4tb3ItbnBtLnRzIl0sIm5hbWVzIjpbInNhZmVZYXJuT3JOcG0iLCJzeXN0ZW0iLCJwcm9jZXNzIiwiZW52IiwiTk9ERV9JTlNUQUxMRVIiLCJjb25zb2xlIiwid2FybiIsImxvZ1N5bWJvbHMiLCJ3YXJuaW5nIiwieWVsbG93IiwieWFybk9yTnBtU3Bhd24iLCJhcmdzIiwib3B0cyIsImhhc1lhcm4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBOztBQUNBOztBQUNBOzs7O0FBRUEsTUFBTUEsYUFBYSxHQUFHLE1BQU07QUFDMUIsUUFBTUMsTUFBTSxHQUFHLHlCQUFmOztBQUNBLFVBQVFDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxjQUFwQjtBQUNFLFNBQUssTUFBTDtBQUNBLFNBQUssS0FBTDtBQUNFLGFBQU9GLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxjQUFuQjs7QUFDRjtBQUNFLFVBQUlGLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxjQUFoQixFQUFnQztBQUM5QkMsUUFBQUEsT0FBTyxDQUFDQyxJQUFSLENBQWMsR0FBRUMsb0JBQVdDLE9BQVEscURBQW9EUCxNQUFPLEVBQWpGLENBQW1GUSxNQUFoRztBQUNEOztBQUNELGFBQU9SLE1BQVA7QUFSSjtBQVVELENBWkQ7O2VBY2VELGE7OztBQUVSLE1BQU1VLGNBQWMsR0FBRyxDQUFDQyxJQUFELEVBQWtCQyxJQUFsQixLQUFpQyxnQ0FBYVosYUFBYSxFQUExQixFQUE4QlcsSUFBOUIsRUFBb0NDLElBQXBDLENBQXhEOzs7O0FBRUEsTUFBTUMsT0FBTyxHQUFHLE1BQU1iLGFBQWEsT0FBTyxNQUExQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzcGF3blByb21pc2UgZnJvbSAnY3Jvc3Mtc3Bhd24tcHJvbWlzZSc7XG5pbXBvcnQgbG9nU3ltYm9scyBmcm9tICdsb2ctc3ltYm9scyc7XG5pbXBvcnQgeWFybk9yTnBtIGZyb20gJ3lhcm4tb3ItbnBtJztcblxuY29uc3Qgc2FmZVlhcm5Pck5wbSA9ICgpID0+IHtcbiAgY29uc3Qgc3lzdGVtID0geWFybk9yTnBtKCk7XG4gIHN3aXRjaCAocHJvY2Vzcy5lbnYuTk9ERV9JTlNUQUxMRVIpIHtcbiAgICBjYXNlICd5YXJuJzpcbiAgICBjYXNlICducG0nOlxuICAgICAgcmV0dXJuIHByb2Nlc3MuZW52Lk5PREVfSU5TVEFMTEVSO1xuICAgIGRlZmF1bHQ6XG4gICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9JTlNUQUxMRVIpIHtcbiAgICAgICAgY29uc29sZS53YXJuKGAke2xvZ1N5bWJvbHMud2FybmluZ30gVW5rbm93biBOT0RFX0lOU1RBTExFUiwgdXNpbmcgZGV0ZWN0ZWQgaW5zdGFsbGVyICR7c3lzdGVtfWAueWVsbG93KTtcbiAgICAgIH1cbiAgICAgIHJldHVybiBzeXN0ZW07XG4gIH1cbn07XG5cbmV4cG9ydCBkZWZhdWx0IHNhZmVZYXJuT3JOcG07XG5cbmV4cG9ydCBjb25zdCB5YXJuT3JOcG1TcGF3biA9IChhcmdzPzogc3RyaW5nW10sIG9wdHM/OiBhbnkpID0+IHNwYXduUHJvbWlzZShzYWZlWWFybk9yTnBtKCksIGFyZ3MsIG9wdHMpO1xuXG5leHBvcnQgY29uc3QgaGFzWWFybiA9ICgpID0+IHNhZmVZYXJuT3JOcG0oKSA9PT0gJ3lhcm4nO1xuIl19