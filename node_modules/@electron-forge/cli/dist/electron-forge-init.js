"use strict";

require("source-map-support/register");

var _core = require("@electron-forge/core");

var _path = _interopRequireDefault(require("path"));

var _commander = _interopRequireDefault(require("commander"));

require("./util/terminate");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

_asyncToGenerator(function* () {
  let dir = process.cwd();

  _commander.default.version(require('../package.json').version).arguments('[name]').option('-t, --template [name]', 'Name of the forge template to use').option('-c, --copy-ci-files', 'Whether to copy the templated CI files (defaults to false)', false).action(name => {
    if (!name) return;

    if (_path.default.isAbsolute(name)) {
      dir = name;
    } else {
      dir = _path.default.resolve(dir, name);
    }
  }).parse(process.argv);

  const initOpts = {
    dir,
    interactive: true,
    copyCIFiles: !!_commander.default.copyCiFiles
  };
  if (_commander.default.template) initOpts.template = _commander.default.template;
  yield _core.api.init(initOpts);
})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9lbGVjdHJvbi1mb3JnZS1pbml0LnRzIl0sIm5hbWVzIjpbImRpciIsInByb2Nlc3MiLCJjd2QiLCJwcm9ncmFtIiwidmVyc2lvbiIsInJlcXVpcmUiLCJhcmd1bWVudHMiLCJvcHRpb24iLCJhY3Rpb24iLCJuYW1lIiwicGF0aCIsImlzQWJzb2x1dGUiLCJyZXNvbHZlIiwicGFyc2UiLCJhcmd2IiwiaW5pdE9wdHMiLCJpbnRlcmFjdGl2ZSIsImNvcHlDSUZpbGVzIiwiY29weUNpRmlsZXMiLCJ0ZW1wbGF0ZSIsImFwaSIsImluaXQiXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTs7QUFFQTs7QUFDQTs7QUFFQTs7Ozs7Ozs7QUFFQSxrQkFBQyxhQUFZO0FBQ1gsTUFBSUEsR0FBRyxHQUFHQyxPQUFPLENBQUNDLEdBQVIsRUFBVjs7QUFDQUMscUJBQ0dDLE9BREgsQ0FDV0MsT0FBTyxDQUFDLGlCQUFELENBQVAsQ0FBMkJELE9BRHRDLEVBRUdFLFNBRkgsQ0FFYSxRQUZiLEVBR0dDLE1BSEgsQ0FHVSx1QkFIVixFQUdtQyxtQ0FIbkMsRUFJR0EsTUFKSCxDQUlVLHFCQUpWLEVBSWlDLDREQUpqQyxFQUkrRixLQUovRixFQUtHQyxNQUxILENBS1dDLElBQUQsSUFBVTtBQUNoQixRQUFJLENBQUNBLElBQUwsRUFBVzs7QUFDWCxRQUFJQyxjQUFLQyxVQUFMLENBQWdCRixJQUFoQixDQUFKLEVBQTJCO0FBQ3pCVCxNQUFBQSxHQUFHLEdBQUdTLElBQU47QUFDRCxLQUZELE1BRU87QUFDTFQsTUFBQUEsR0FBRyxHQUFHVSxjQUFLRSxPQUFMLENBQWFaLEdBQWIsRUFBa0JTLElBQWxCLENBQU47QUFDRDtBQUNGLEdBWkgsRUFhR0ksS0FiSCxDQWFTWixPQUFPLENBQUNhLElBYmpCOztBQWVBLFFBQU1DLFFBQXFCLEdBQUc7QUFDNUJmLElBQUFBLEdBRDRCO0FBRTVCZ0IsSUFBQUEsV0FBVyxFQUFFLElBRmU7QUFHNUJDLElBQUFBLFdBQVcsRUFBRSxDQUFDLENBQUNkLG1CQUFRZTtBQUhLLEdBQTlCO0FBS0EsTUFBSWYsbUJBQVFnQixRQUFaLEVBQXNCSixRQUFRLENBQUNJLFFBQVQsR0FBb0JoQixtQkFBUWdCLFFBQTVCO0FBRXRCLFFBQU1DLFVBQUlDLElBQUosQ0FBU04sUUFBVCxDQUFOO0FBQ0QsQ0F6QkQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhcGksIEluaXRPcHRpb25zIH0gZnJvbSAnQGVsZWN0cm9uLWZvcmdlL2NvcmUnO1xuXG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCBwcm9ncmFtIGZyb20gJ2NvbW1hbmRlcic7XG5cbmltcG9ydCAnLi91dGlsL3Rlcm1pbmF0ZSc7XG5cbihhc3luYyAoKSA9PiB7XG4gIGxldCBkaXIgPSBwcm9jZXNzLmN3ZCgpO1xuICBwcm9ncmFtXG4gICAgLnZlcnNpb24ocmVxdWlyZSgnLi4vcGFja2FnZS5qc29uJykudmVyc2lvbilcbiAgICAuYXJndW1lbnRzKCdbbmFtZV0nKVxuICAgIC5vcHRpb24oJy10LCAtLXRlbXBsYXRlIFtuYW1lXScsICdOYW1lIG9mIHRoZSBmb3JnZSB0ZW1wbGF0ZSB0byB1c2UnKVxuICAgIC5vcHRpb24oJy1jLCAtLWNvcHktY2ktZmlsZXMnLCAnV2hldGhlciB0byBjb3B5IHRoZSB0ZW1wbGF0ZWQgQ0kgZmlsZXMgKGRlZmF1bHRzIHRvIGZhbHNlKScsIGZhbHNlKVxuICAgIC5hY3Rpb24oKG5hbWUpID0+IHtcbiAgICAgIGlmICghbmFtZSkgcmV0dXJuO1xuICAgICAgaWYgKHBhdGguaXNBYnNvbHV0ZShuYW1lKSkge1xuICAgICAgICBkaXIgPSBuYW1lO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZGlyID0gcGF0aC5yZXNvbHZlKGRpciwgbmFtZSk7XG4gICAgICB9XG4gICAgfSlcbiAgICAucGFyc2UocHJvY2Vzcy5hcmd2KTtcblxuICBjb25zdCBpbml0T3B0czogSW5pdE9wdGlvbnMgPSB7XG4gICAgZGlyLFxuICAgIGludGVyYWN0aXZlOiB0cnVlLFxuICAgIGNvcHlDSUZpbGVzOiAhIXByb2dyYW0uY29weUNpRmlsZXMsXG4gIH07XG4gIGlmIChwcm9ncmFtLnRlbXBsYXRlKSBpbml0T3B0cy50ZW1wbGF0ZSA9IHByb2dyYW0udGVtcGxhdGU7XG5cbiAgYXdhaXQgYXBpLmluaXQoaW5pdE9wdHMpO1xufSkoKTtcbiJdfQ==