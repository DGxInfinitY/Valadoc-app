"use strict";

require("source-map-support/register");

var _core = require("@electron-forge/core");

var _path = _interopRequireDefault(require("path"));

var _commander = _interopRequireDefault(require("commander"));

require("./util/terminate");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

_asyncToGenerator(function* () {
  let dir = process.cwd();

  _commander.default.version(require('../package.json').version).arguments('[name]').action(name => {
    if (!name) return;

    if (_path.default.isAbsolute(name)) {
      dir = name;
    } else {
      dir = _path.default.resolve(dir, name);
    }
  }).parse(process.argv);

  yield _core.api.import({
    dir,
    interactive: true
  });
})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9lbGVjdHJvbi1mb3JnZS1pbXBvcnQudHMiXSwibmFtZXMiOlsiZGlyIiwicHJvY2VzcyIsImN3ZCIsInByb2dyYW0iLCJ2ZXJzaW9uIiwicmVxdWlyZSIsImFyZ3VtZW50cyIsImFjdGlvbiIsIm5hbWUiLCJwYXRoIiwiaXNBYnNvbHV0ZSIsInJlc29sdmUiLCJwYXJzZSIsImFyZ3YiLCJhcGkiLCJpbXBvcnQiLCJpbnRlcmFjdGl2ZSJdLCJtYXBwaW5ncyI6Ijs7OztBQUFBOztBQUVBOztBQUNBOztBQUVBOzs7Ozs7OztBQUVBLGtCQUFDLGFBQVk7QUFDWCxNQUFJQSxHQUFHLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixFQUFWOztBQUNBQyxxQkFDR0MsT0FESCxDQUNXQyxPQUFPLENBQUMsaUJBQUQsQ0FBUCxDQUEyQkQsT0FEdEMsRUFFR0UsU0FGSCxDQUVhLFFBRmIsRUFHR0MsTUFISCxDQUdXQyxJQUFELElBQVU7QUFDaEIsUUFBSSxDQUFDQSxJQUFMLEVBQVc7O0FBQ1gsUUFBSUMsY0FBS0MsVUFBTCxDQUFnQkYsSUFBaEIsQ0FBSixFQUEyQjtBQUN6QlIsTUFBQUEsR0FBRyxHQUFHUSxJQUFOO0FBQ0QsS0FGRCxNQUVPO0FBQ0xSLE1BQUFBLEdBQUcsR0FBR1MsY0FBS0UsT0FBTCxDQUFhWCxHQUFiLEVBQWtCUSxJQUFsQixDQUFOO0FBQ0Q7QUFDRixHQVZILEVBV0dJLEtBWEgsQ0FXU1gsT0FBTyxDQUFDWSxJQVhqQjs7QUFhQSxRQUFNQyxVQUFJQyxNQUFKLENBQVc7QUFDZmYsSUFBQUEsR0FEZTtBQUVmZ0IsSUFBQUEsV0FBVyxFQUFFO0FBRkUsR0FBWCxDQUFOO0FBSUQsQ0FuQkQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBhcGkgfSBmcm9tICdAZWxlY3Ryb24tZm9yZ2UvY29yZSc7XG5cbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IHByb2dyYW0gZnJvbSAnY29tbWFuZGVyJztcblxuaW1wb3J0ICcuL3V0aWwvdGVybWluYXRlJztcblxuKGFzeW5jICgpID0+IHtcbiAgbGV0IGRpciA9IHByb2Nlc3MuY3dkKCk7XG4gIHByb2dyYW1cbiAgICAudmVyc2lvbihyZXF1aXJlKCcuLi9wYWNrYWdlLmpzb24nKS52ZXJzaW9uKVxuICAgIC5hcmd1bWVudHMoJ1tuYW1lXScpXG4gICAgLmFjdGlvbigobmFtZSkgPT4ge1xuICAgICAgaWYgKCFuYW1lKSByZXR1cm47XG4gICAgICBpZiAocGF0aC5pc0Fic29sdXRlKG5hbWUpKSB7XG4gICAgICAgIGRpciA9IG5hbWU7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBkaXIgPSBwYXRoLnJlc29sdmUoZGlyLCBuYW1lKTtcbiAgICAgIH1cbiAgICB9KVxuICAgIC5wYXJzZShwcm9jZXNzLmFyZ3YpO1xuXG4gIGF3YWl0IGFwaS5pbXBvcnQoe1xuICAgIGRpcixcbiAgICBpbnRlcmFjdGl2ZTogdHJ1ZSxcbiAgfSk7XG59KSgpO1xuIl19